# for unknown reason property "server.port" in spring boot 2 returns "-1", so this is a crutch
local.server.port=8074
server.port=8074
# context path of the application:
server.servlet.context-path=/textsaver

#***********************************************************************************************************
# To suppress   java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob()
# is not yet implemented (this is because of hibernate attempts to find out if I support createClob):
# "JPA (Hibernate)... is trying to verify PostgreSQL CLOB feature. This feature is not implemented in JDBC driver so driver
# throws unimportant exception. To suppress this behaviour you have to disable driver's feature detection and configure
# it's features manually." //   https://vkuzel.com/spring-boot-jpa-hibernate-atomikos-postgresql-exception
# Disable feature detection by this undocumented parameter.
# Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

# Enabling H2 Console (enabling by URL http://localhost:8074/textsaver/h2-console)
spring.h2.console.enabled=true
#************************************************************************************************************

#DB properties:
spring.datasource.driver-class-name=org.postgresql.Driver
# https://jdbc.postgresql.org/documentation/head/connect.html
spring.datasource.url=jdbc:postgresql://localhost:5432/textsaver
spring.datasource.username=postgres
spring.datasource.password=password

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect

spring.jpa.show-sql=true

# https://docs.spring.io/spring-boot/docs/current/reference/html/howto-database-initialization.html#howto-initialize-a-database-using-spring-jdbc
# Initialize the datasource with available DDL and DML scripts. In Spring Boot 2 this parameter is "embedded" by default,
# so I need to replace it with "always" to initialize "real" db. (there can be "always", "embedded", "never")

spring.datasource.initialization-mode=always

# in a JPA-based app, you can choose to let Hibernate create the schema or use schema.sql, BUT YOU CANNOT DO BOTH.
# Make sure to disable spring.jpa.hibernate.ddl-auto if you use schema.sql (*what about data.sql?).
spring.jpa.hibernate.ddl-auto=none

logging.level.org.springframework.web.servlet: DEBUG


# The query to use for selecting the username, password, and if the user is enabled by username or deactivated.
spring.queries.user-query=select u.username, u.password, u.enabled from users u where u.username=?
spring.queries.roles-query=select u.username, r.role from users u inner join user_role ur on u.id = ur.user_id inner join roles r on r.id = ur.role_id where u.username = ?
